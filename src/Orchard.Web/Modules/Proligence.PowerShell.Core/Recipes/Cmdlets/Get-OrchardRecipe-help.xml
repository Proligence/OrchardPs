<?xml version="1.0" encoding="utf-8" ?>
<helpItems xmlns="http://msh" schema="maml">
  <command:command
    xmlns:maml="http://schemas.microsoft.com/maml/2004/10"
    xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10"
    xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">

    <!-- Cmdlet details section-->

    <command:details>
      <command:name>Get-OrchardRecipe</command:name>
      <maml:description>
        <maml:para>Gets the available Orchard recipes.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para></maml:para>
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>OrchardRecipe</command:noun>
      <dev:version></dev:version>
    </command:details>

    <!-- Cmdlet description section-->

    <maml:description>
      <maml:para>The Get-OrchardRecipe cmdlet gets the available Orchard recipes.</maml:para>
    </maml:description>

    <!-- Cmdlet syntax section-->

    <command:syntax>

      <!-- ParameterSet: Default -->
      <command:syntaxItem>
        <maml:name>Get-OrchardRecipe</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Specifies the name of the recipe to get. Wildcards are permitted.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">string</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
          <maml:name>ExtensionId</maml:name>
          <maml:description>
            <maml:para>Specifies the ID of the Orchard extension from which recipes will be retrieved.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">string</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false">
          <maml:name>Tenant</maml:name>
          <maml:description>
            <maml:para>Specifies the name of the Orchard tenant for which recipes will be retrieved.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">string</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>

      <!-- ParameterSet: TenantObject -->
      <command:syntaxItem>
        <maml:name>Get-OrchardRecipe</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Specifies the name of the recipe to get. Wildcards are permitted.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">string</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
          <maml:name>ExtensionId</maml:name>
          <maml:description>
            <maml:para>Specifies the ID of the Orchard extension from which recipes will be retrieved.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">string</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true">
          <maml:name>TenantObject</maml:name>
          <maml:description>
            <maml:para>Specifies the object that represents the Orchard tenant for which recipes will be retrieved. This object can be acquired by using the Get-ChildItem cmdlet on the Orchard PSDrive contents or by using the Get-Tenant cmdlet. This parameter is required.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Orchard.Environment.Configuration.ShellSettings</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>

    </command:syntax>

    <!-- Cmdlet parameters section-->

    <command:parameters>

      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Specifies the name of the recipe to get. Wildcards are permitted.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">string</command:parameterValue>
        <dev:type>
          <maml:name>string</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>

      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
        <maml:name>ExtensionId</maml:name>
        <maml:description>
          <maml:para>Specifies the ID of the Orchard extension from which recipes will be retrieved.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">string</command:parameterValue>
        <dev:type>
          <maml:name>string</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>

      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false">
        <maml:name>Tenant</maml:name>
        <maml:description>
          <maml:para>Specifies the name of the Orchard tenant for which recipes will be retrieved.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">string</command:parameterValue>
        <dev:type>
          <maml:name>string</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>

      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true">
        <maml:name>TenantObject</maml:name>
        <maml:description>
          <maml:para>Specifies the object that represents the Orchard tenant for which recipes will be retrieved. This object can be acquired by using the Get-ChildItem cmdlet on the Orchard PSDrive contents or by using the Get-Tenant cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">ShellSettings</command:parameterValue>
        <dev:type>
          <maml:name>ShellSettings</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>
      
    </command:parameters>

    <!-- Input - Output section-->

    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Orchard.Environment.Configuration.ShellSettings</maml:name>
          <maml:uri/>
          <maml:description />
        </dev:type>
        <maml:description>
          <maml:para>You can pipe instances of the ShellSettings class to Get-OrchardRecipe. This object can be acquired by using the Get-ChildItem cmdlet on the Orchard PSDrive contents or by using the Get-Tenant cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>

    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>Orchard.Recipes.Models.Recipe</maml:name>
          <maml:uri></maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
      </command:returnValue>
    </command:returnValues>

    <!-- Error section-->

    <command:terminatingErrors />
    <command:nonTerminatingErrors />

    <!-- Notes section  -->

    <maml:alertSet>
      <maml:title></maml:title>
      <maml:alert>
        <maml:para>
          When no tenant is specified, then the command will use the tenant at the current location in the Orchard drive. If the location is not in any Orchard tenant, then the Default tenant is used.
        </maml:para>
      </maml:alert>
    </maml:alertSet>

    <!-- Example section  -->

    <command:examples>

      <command:example>
        <maml:title>
          -------------------------- EXAMPLE 1 --------------------------
        </maml:title>
        <maml:introduction>
          <maml:para>Orchard:\Tenants\MyTenant&gt; </maml:para>
        </maml:introduction>
        <dev:code>
          Get-OrchardRecipe
        </dev:code>
        <dev:remarks>
          <maml:para>Description</maml:para>
          <maml:para>-----------</maml:para>
          <maml:para>This command gets all recipes available in the 'MyTenant' tenant. In this case the tenant from the current location in the Orchard drive is used, since no tenant name or object was specified as a parameter.</maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText></command:commandText>
          </command:commandLine>
        </command:commandLines>
      </command:example>

      <command:example>
        <maml:title>
          -------------------------- EXAMPLE 2 --------------------------
        </maml:title>
        <maml:introduction>
          <maml:para>Orchard:\&gt; </maml:para>
        </maml:introduction>
        <dev:code>
          Get-OrchardRecipe -ExtensionId Orchard.AuditTrail -Tenant MyTenant
        </dev:code>
        <dev:remarks>
          <maml:para>Description</maml:para>
          <maml:para>-----------</maml:para>
          <maml:para>This command gets all recipes which are provided by the 'Orchard.AuditTrail' extension in the 'MyTenant' tenant. In this case the tenant is specified explicitly using the 'Tenant' parameter.</maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText></command:commandText>
          </command:commandLine>
        </command:commandLines>
      </command:example>

      <command:example>
        <maml:title>
          -------------------------- EXAMPLE 3 --------------------------
        </maml:title>
        <maml:introduction>
          <maml:para>Orchard:\&gt; </maml:para>
        </maml:introduction>
        <dev:code>
          Get-OrchardRecipe S*
        </dev:code>
        <dev:remarks>
          <maml:para>Description</maml:para>
          <maml:para>-----------</maml:para>
          <maml:para>This command gets all recipes which name starts with 'S'.</maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText></command:commandText>
          </command:commandLine>
        </command:commandLines>
      </command:example>

    </command:examples>

    <!-- Related links section  -->

    <RelatedLinks>
      <navigationLink>
        <linkText>Invoke-OrchardRecipe</linkText>
        <uri/>
      </navigationLink>
      <navigationLink>
        <linkText>Get-ChildItem</linkText>
        <uri/>
      </navigationLink>
      <navigationLink>
        <linkText>Get-Tenant</linkText>
        <uri/>
      </navigationLink>
    </RelatedLinks>

  </command:command>
</helpItems>